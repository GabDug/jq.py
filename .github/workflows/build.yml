name: Build

on: [push, pull_request]

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2019]
        python-version: ["3.12"]

    steps:

    - uses: actions/checkout@v3

    #~ - name: Use Python ${{ matrix.python-version }}
      #~ uses: actions/setup-python@v4
      #~ with:
        #~ python-version: ${{ matrix.python-version }}

    #~ - run: python -m pip install cython==0.29.35 tox virtualenv

    #~ - run: python -m cython jq.pyx

    - run: where.exe sed

    - run: echo 1 | sed -e 's/\\/\\\\/g'

    - run: echo 1 | 'C:\Program Files\Git\usr\bin\sed.exe' --debug -e 's/\\/\\\\/g'
      shell: bash

    - run: |
        cd tmp
        make build SHELL='C:\Program Files\Git\bin\bash.EXE'
      shell: bash

    - run: |
        cd tmp
        make --version
        where.exe make
        choco install make
        make --version
        where.exe make
        ls 'C:\ProgramData\chocolatey\bin'
        ls 'C:\ProgramData\chocolatey\lib\make'
        C:\ProgramData\chocolatey\bin\make.exe --version
        C:\ProgramData\chocolatey\bin\make.exe build SHELL=C:\msys64\usr\bin\bash.exe

    - run: |
        tar xf jq-1.7.tar.gz
        cd jq-1.7
        ./configure CFLAGS='-fPIC -pthread' --disable-maintainer-mode --with-oniguruma=builtin
        make V=1 SHELL='C:\Program Files\Git\bin\bash.exe'
      shell: bash
      working-directory: deps

    - run: tox -e py
